[
["index.html", "Introduction to Python Chapter 1 INTRO", " Introduction to Python Łukasz Muszyński 2019-09-15 Chapter 1 INTRO Different IT tools "],
["intro-1.html", "Chapter 2 INTRO", " Chapter 2 INTRO "],
["git.html", "Chapter 3 Git 3.1 Uwagi rozne 3.2 roznice/zmiany 3.3 stages 3.4 repozytoria 3.5 branches 3.6 commits 3.7 commits -wskazniki 3.8 merge 3.9 smietnik", " Chapter 3 Git C:/Users/memy/OneDrive/Pulpit/1_Programs_and_programing/GIT/git_test/repo1 3.1 Uwagi rozne Wystarczy podawać PIERWSZE 8 znakow numeru commit-u. Moze wystapic problem kiedy w pliku zostana zrobione zmiany w dwoch roznych programach (np. w samym Git i w Git pod Rstudio). Wtedy trzeba usunac odpowiedni plik poleceniem w konsoli Git. 3.2 roznice/zmiany 3.2.1 zmiany jakie sa w stage wzgledem tego to jest przed poczekalnia git diff 3.2.2 zmiany jakie sa w stage wzgledem poprzedniego commitu git diff --staged 3.2.3 roznice miedzy branchami git diff branch_1 branch_2 3.2.4 zmiany w konkretnym commicie git show hash_7 3.2.5 roznice miedzy dwoma zadanymi commitami git diff hash_7_1 hash_7_2 3.2.6 roznica miedzy zadanym commitem i commitem na ktorym jest wskaznik git diff hash_7 HEAD 3.3 stages 3.3.1 cofniecie pliku z stage (poczekalni) git reset HEAD nazwa_pliki 3.3.2 dodanie do stage wszystkich modyfikacji git add . 3.3.3 dodanie do stage modyfikacji w konkretnym pliku git add naza_pliku 3.4 repozytoria 3.4.1 lista repozytoriow zdalnych git remote -v 3.4.2 dodanie polaczenia do zdalnego repo git remote add origin git@github.com:USERNAME/REPOSITORY.git 3.4.3 zmiana url dla istniejącego polaczenia git remote set-url origin git@github.com:USERNAME/REPOSITORY.git 3.4.4 usuniecie poloczenia do zdalnego repo ktore przy laczeniu nazwalismy ‘origin’ git remote rm origin 3.5 branches 3.5.1 lista lokalnych branchow git branch 3.5.2 lista wszyskich branchow ( branche zdalne są na czerwowo) git branch --all 3.5.3 przelaczenie sie na inny branch git checkout &lt;branch&gt; 3.5.4 utworzenie nowego brancha i przelaczenie sie na niego git checkout -b &lt;branch&gt; 3.5.5 utworzenie nowego brancha bez przelaczenie sie na niego git branch &lt;name_of_your_new_branch&gt; 3.5.6 usuniecie brancha git branch -d branch_name git branch -D branch_name The -d option stands for –delete, which would delete the local branch, only if you have already pushed and merged it with your remote branches. The -D option stands for –delete –force, which deletes the branch regardless of its push and merge status, so be careful using this one! 3.5.7 usuniecie zdalnego brancha git push &lt;remote_name&gt; --delete &lt;branch_name&gt; 3.5.8 utworzenia zdalnego brancha: Najpierw tworzymy go lokalnie. A potem pushujemy odpowiednio. Syntax: $ git push &lt;REMOTE_NAME&gt; &lt;LOCAL_BRANCH_NAME&gt;:&lt;REMOTE_BRANCH_NAME&gt; Command: $ git push origin stage1:development Przykla ze strony: How to Create a Branch in Remote Git Repository 3.6 commits 3.6.1 commit dla konkretnego pliku git commit nazwa_pliku -m &#39;.&#39; 3.6.2 add i commit w jednej komendzie git commit -am &quot;comment&quot; 3.6.3 lista commits git log 3.6.4 lista commitow dla konkretnego pliku git log nazwa_pliku 3.6.5 lista commitow dla konkretnego brancha (tutaj ‘master’) git log master 3.6.6 modyfikacja do komentarza w ostatniej zmianie git commit --amend W chodzę w VIM w tryb umozliwiajacy zmiany i poprawiam pierwsze linijke gdzie jest komentarz. Naciskam i potem :wq i 3.7 commits -wskazniki 3.7.1 przesuniecie wskaznika na zadany commit na branchu ‘master’ i potem powrot do HEAD git checkout a7eb01a3 git checkout master 3.7.2 cofniecie wskaznika na stary commit i utworzenie od niego branch-a o nazwie ‘new_branch’ git checkout 0d1d7fc32 git checkout -b new_branch 3.7.3 cofniecie zmian do zadanego commitu na danym branchu git checkout master git reset --hard 1258f0d0aae This will destroy any local modifications. Don’t do it if you have uncommitted work you want to keep. git reset --hard 0d1d7fc32 Alternatively, if there’s work to keep: git stash git reset --hard 0d1d7fc32 git stash pop This saves the modifications, then reapplies that patch after resetting. You could get merge conflicts, if you’ve modified things which were changed since the commit you reset to. 3.7.4 usuniecie ostatniego commitu git reser HEAD 3.7.5 usuniecie kilku commitow usuniecie 4 i 3 commitu (commmit 1 to commit pierwszy chyba) git rebase --onto master~4 master~2 master Powyzej celowo jest master~2 a nie master~3 !!! . Niestety moga wystapic konflikty przy rabase takie jak przy mergowaniu. Postepowac zgodnie z instrukcjami na ekranie. Pracuje się tak jak przy mergu. Czy patrze na jakich plikach jest konflikt , potem zmieniam to recznie w plikach wedlug znacników potem daje git add i potem git rebase –continue. W zmianach zatwierdzam to co jes ostatnie i chyba wtedy bedzie ok. 3.7.6 revert vs reset Let’s say you had commits: C B A git revert B, will create a commit that undoes changes in B. git revert A, will create a commit that undoes changes in A, but will not touch changes in B Note that if changes in B are dependent on changes in A, the revert of A is not possible. git reset –soft A, will change the commit history and repository; staging and working directory will still be at state of C. git reset –mixed A, will change the commit history, repository, and staging; working directory will still be at state of C. git reset –hard A, will change the commit history, repository, staging and working directory; you will go back to the state of A completely. rebase - po nim tez trzeba rozwiazywac konflikty git diff 3.8 merge 3.8.1 zlaczenie brancha ‘prod’ do biezacego brancha git merge prod 3.8.2 sprawdzenie i rozwiazywanie konfliktow Zeby zoabaczyc na jakich plikach sa konflikty (jestesmy w trakcie procesu mergowania): git status Nastepnie w plikach mozna zobaczyc ze beda dodane nastepujace elemenenty: Between the &lt;&lt;&lt;&lt;&lt;&lt;&lt; and =======, you will find the version as per the changes in your current branch, relative to the base commit. Between the ======= and &gt;&gt;&gt;&gt;&gt;&gt;&gt;, you will find the version according to the other branch, relative to the base commit. For convenience, after the &lt;&lt;&lt;&lt;&lt;&lt;&lt; and &gt;&gt;&gt;&gt;&gt;&gt;&gt; markers, you will see hints as to which commit that part of the conflict stems from, HEAD of course being the current revision. ++&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD ++abcgh ++======= ++abcdef ++&gt;&gt;&gt;&gt;&gt;&gt;&gt; prod UStalamy jak ma wygladac wersja finalna pliku. Nastepnie bedac dalej w procesie mergowania robimy git add . i potem git commit -m’komentarz’ . Mergowania automatycznie sie zakonczy 3.8.3 zaprzestanie procesu mergowania git merge -abort 3.9 smietnik 109 To see the difference between: Your working copy and staging area: % git diff Staging area and the latest commit: % git diff –staged Your working copy and commit 4ac0a6733: % git diff 4ac0a6733 Commit 4ac0a6733 and the latest commit: % git diff 4ac0a6733 HEAD Commit 4ac0a6733 and commit 826793951 % git diff 4ac0a6733 826793951 "],
["installing.html", "Chapter 4 Installing", " Chapter 4 Installing Download sonarqube Doanload sonnar scanner (this is not the same as sonarqube) Download open jdk For jdk create environmental variable JAVA_HOME (value: C:-12.02), and path : C:-12.02 Check if you have access to proper Java in cmd: java -version Unzip sonarqube and sonarscanner in different directories. Crate environmental path for sonnar scanner bin "],
["running.html", "Chapter 5 Running", " Chapter 5 Running Run bat file in C:Files-7.9.1-7.9.1-x86-64.bat In Browres start page: http://localhost:9000/ Log in with password: admin and login: admin "],
["project.html", "Chapter 6 Project", " Chapter 6 Project After login click icon ‘+’ in right up corner. Give name to new project and click ‘set up’ generate token select language, OS and you will see blask window with code do copy. Copy it run new cmd if you have Git in folder check if everything is commited !!! go to directory you want to scan in cmd past copied code and press enter (if cmd can not find sonar-scanner.bat then provide full path) on web page after some time new peoject will be created "],
["windows.html", "Chapter 7 Windows 7.1 podstawy skladni 7.2 zmienne 7.3 control flow 7.4 odpalanie stron i przeladarem 7.5 przydatne komentu", " Chapter 7 Windows 7.1 podstawy skladni :: komentarz 7.2 zmienne :: nie dawac spacji na okolo znaku ‘=’ set zmienna=100 :: do zmiennaj odwoluje sie w znalach procentu (???) %zmienna% 7.3 control flow set z=100 if %z%==100 ((???) ok) else ((???) no_ok) if exist filename.txt (…) else (…) 7.4 odpalanie stron i przeladarem start chrome wp.pl 7.5 przydatne komentu :: lista zmiennych srodowiskowych set :: lista zmiennych srodowiskowych z ‘PYTH’ (uwaga, jest casesensitive) set | findstr PTYH systeminfo ipconfig dir dir *.txt help :: help for cd function help cd :: or cd /? ping www.google.com :: skojazenia programow z plikami assoc assoc .py :: informacje o aktualnych polaczeniach netstat systeminfo :: You can use the “tasklist” command to provide a current list of all tasks running on your PC tasklist :: zabijanie taskow taskkill -pid "]
]
